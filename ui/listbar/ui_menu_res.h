// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.3.0
// LVGL version: 8.3.6
// Project name: SquareLine_Project

#ifndef _UI_MENU_RES_H
#define _UI_MENU_RES_H

#ifdef __cplusplus
extern "C" {
#endif
#include "ui_manger.h"

#include "lvgl.h"
//#include "ui_explorer.h"

enum
{
	MENU_BACK_BMP,	
	MENU_BACK_P_BMP,

/*
	//MENU_SCROLL_BAR_BMP,
	//MENU_SCROLL_DOT_BMP,
	//MENU_UP_TOP_LIST_BMP,
	//MENU_DOWN_TAIL_LIST_BMP,
	//MENU_BG_LINE_BMP,
	//MENU_LIST_SEL_BAR_BMP,
	//MENU_LIST_BAR_BG_N_BMP,
	MENU_ENTER_ICON_BMP,
	MENU_UN_ENTER_ICON_BMP,
	MENU_LEFT_ARROW_SET_BMP,
	MENU_LEFT_ARROW_SET_P_BMP,
	MENU_LIST_ARROW_LEFT_D_BMP,
	MENU_RIGHT_ARROW_SET_BMP,
	MENU_RIGHT_ARROW_SET_P_BMP,
	MENU_LIST_ARROW_RIGHT_D_BMP,
*/
	MENU_SETTINGS_BROWSE_BMP,
	MENU_SETTING_TOP_BAR_BMP,
	MENU_SETTING_CONTENT_BGD_BMP,
	MENU_EXPLORER_BROWSE_TOP_BG_BMP,
	MENU_EXPLORER_BROWSE_MID_BG_BMP,
	MENU_EXPLORER_BROWSE_BOTTOM_BG_BMP,
	MENU_EXPLORER_BROWSE_MUSIC_BMP,
	MENU_EXPLORER_BROWSE_VIDEO_BMP,
	MENU_EXPLORER_BROWSE_IMAGE_BMP,
	MENU_SETTING_PHONE_COME_N_BMP,
	MENU_SETTING_PHONE_CALL_N_BMP,
	MENU_SETTING_PHONE_ACC_N_BMP,
	MENU_SETTING_CONTENT_BG_B_BMP,
	MENU_SETTING_MUSIC_N_BMP,
	MENU_SETTING_VIDEO_N_BMP,
	MENU_SETTING_BLE_LIST_BG_BMP,

	MENU_SCROLL_BAR_BMP,	// scroll bar 背景图
	MENU_UP_TOP_LIST_BMP,	// scroll bar 头部icon
	MENU_SCROLL_DOT_BMP,	// scroll bar , 滑块，高度必须为1
	MENU_DOWN_TAIL_LIST_BMP,	// scroll bar , 滑块，高度必须为1	
	MENU_LONG_STR_SCROLL_BG_BMP,	// 长字符串滚动背景
	MENU_SYSTEM_BG_LINE_BMP,	//bg line
	MENU_UP_TOP_LIST_P_BMP,		//top icon p
	MENU_DOWN_TAIL_LIST_P_BMP,	//tail icon p

	MENU_PHONEBT_BOOK_ICON_BMP,
	MENU_PHONEBT_HISTORT_IN_BMP,
	MENU_PHONEBT_HISTORT_OUT_BMP,
	MENU_PHONEBT_HISTORT_MISS_BMP,
	MENU_PHONEBT_HISTORT_IN_ICON_BMP,
	MENU_PHONEBT_HISTORT_OUT_ICON_BMP,
	MENU_PHONEBT_HISTORT_MISS_ICON_BMP,
	MENU_PHONEBT_HISTORT_IN_N_ICON_BMP,
	MENU_PHONEBT_HISTORT_OUT_N_ICON_BMP,
	MENU_PHONEBT_HISTORT_MISS_N_ICON_BMP,
	
	//MENU_BTAUDIO_BROWSE_BMP,

#ifdef USE_NEW_SMENU
	MENU_SETTINGS_SETUP_D_BMP,
	MENU_SETTINGS_SETUP_N_BMP,
	MENU_SETTINGS_CONNECT_D_BMP,
	MENU_SETTINGS_CONNECT_N_BMP,
	MENU_SETTINGS_INFO_D_BMP,
	MENU_SETTINGS_INFO_N_BMP,
	MENU_SETTINGS_SEARCH_D_BMP,
	MENU_SETTINGS_SEARCH_N_BMP,
#endif

	
	MAX_MENU_BMP_ITEM
};

static const __s32 lv_menu_res_bmp[] =
{
	ID_HOME_BACK_BMP,	
	ID_HOME_BACK_P_BMP,
/*
	//ID_FM_SCROLL_BAR_BMP,
	//ID_FM_SCROLL_DOT_BMP,
	//ID_FM_UP_TOP_LIST_BMP,
	//ID_FM_DOWN_TAIL_LIST_BMP,
	//ID_FM_BG_LINE_BMP,
	//ID_FM_LIST_SEL_BAR_BMP,
	//ID_USB_IPOD_LIST_BAR_BG_N_BMP,
	ID_FM_ENTER_ICON_BMP,
	ID_FM_UN_ENTER_ICON_BMP,
	ID_FM_LEFT_ARROW_SET_BMP,
	ID_FM_LEFT_ARROW_SET_P_BMP,
	ID_FM_LIST_ARROW_LEFT_D_BMP,
	ID_FM_RIGHT_ARROW_SET_BMP,
	ID_FM_RIGHT_ARROW_SET_P_BMP,
	ID_FM_LIST_ARROW_RIGHT_D_BMP,
*/
	ID_SMENU_SETTINGS_BROWSE_BMP,
	ID_SETTING_SETTING_TOP_BAR_BMP,
	ID_SETTING_SETTING_CONTENT_BGD_BMP,
	ID_EXPLORER_BROWSE_TOP_BG_BMP,
	ID_EXPLORER_BROWSE_MID_BG_BMP,
	ID_EXPLORER_BROWSE_BOTTOM_BG_BMP,
	ID_EXPLORER_BROWSE_MUSIC_BMP,
	ID_EXPLORER_BROWSE_VIDEO_BMP,
	ID_EXPLORER_BROWSE_IMAGE_BMP,
	ID_SETTING_SETTING_PHONE_COME_N_BMP,
	ID_SETTING_SETTING_PHONE_CALL_N_BMP,
	ID_SETTING_SETTING_PHONE_ACC_N_BMP,
	ID_SETTING_SETTING_CONTENT_BG_B_BMP,
	ID_SETTING_SETTING_MUSIC_N_BMP,
	ID_SETTING_SETTING_VIDEO_N_BMP,
	ID_SETTING_SETTING_BLE_LIST_BG_BMP,

	ID_EXPLORER_SCROLL_BAR_BMP,	// scroll bar 背景图
	ID_EXPLORER_UP_TOP_LIST_BMP,	// scroll bar 头部icon
	ID_EXPLORER_SCROLL_DOT_BMP,	// scroll bar , 滑块，高度必须为1
	ID_EXPLORER_DOWN_TAIL_LIST_BMP,	// scroll bar , 滑块，高度必须为1	
	ID_EXPLORER_LONG_STR_SCROLL_BG_BMP,	// 长字符串滚动背景
	ID_SMENU_SYSTEM_BG_LINE_BMP,	//bg line
	
	ID_SMENU_UP_TOP_LIST_P_BMP,		//top icon p
	ID_SMENU_DOWN_TAIL_LIST_P_BMP,	//tail icon p

	ID_PHONEBT_PHONE_BOOK_BROWSE_BMP,
	ID_EXPLORER_BROWSE_TOP_BG_BMP,
	ID_EXPLORER_BROWSE_MID_BG_BMP,
	ID_EXPLORER_BROWSE_BOTTOM_BG_BMP,
	ID_PHONEBT_HISTORY_INCOMING_BMP,
	ID_PHONEBT_HISTORY_OUTGOING_BMP,
	ID_PHONEBT_HISTORY_MISSING_BMP,
	ID_SETTING_SETTING_PHONE_COME_N_BMP,
	ID_SETTING_SETTING_PHONE_CALL_N_BMP,
	ID_SETTING_SETTING_PHONE_ACC_N_BMP,
	//ID_BTAUDIO_BTAUDIO_BROWSE_BMP,

#ifdef USE_NEW_SMENU
	ID_SMENU_SETTINGS_SETUP_D_BMP,
	ID_SMENU_SETTINGS_SETUP_N_BMP,
	ID_SMENU_SETTINGS_CONNECT_D_BMP,
	ID_SMENU_SETTINGS_CONNECT_N_BMP,
	ID_SMENU_SETTINGS_INFO_D_BMP,
	ID_SMENU_SETTINGS_INFO_N_BMP,
	ID_SMENU_SETTINGS_SEARCH_D_BMP,
	ID_SMENU_SETTINGS_SEARCH_N_BMP,
#endif
};

typedef struct menu_res_para
{
	HTHEME lv_menu_bmp[MAX_MENU_BMP_ITEM];
	lv_img_dsc_t lv_menu_icon[MAX_MENU_BMP_ITEM];

}ui_menu_res_para_t;

#define PAGE_NUM			(3)
#define PAGE_ITEM_NUM		(6)
#define PAGE_TOTAL_ITEM		(PAGE_NUM * PAGE_ITEM_NUM)
#define PAGE_FORNT_ITEM		(PAGE_TOTAL_ITEM - PAGE_ITEM_NUM)

#define PIC_PAGE_NUM		(3)
#define PIC_PAGE_ITEM_NUM	(3)
#define PIC_PAGE_TOTAL_ITEM	(PIC_PAGE_NUM * PIC_PAGE_ITEM_NUM)
#define PIC_PAGE_FORNT_ITEM	(PIC_PAGE_TOTAL_ITEM - PIC_PAGE_ITEM_NUM)
#define PIC_NUM				(3)
#define PIC_TOTAL_NUM		(PIC_PAGE_TOTAL_ITEM * PIC_NUM)

typedef enum explorer_view_mode_s
{
    EXPLR_LIST_MODE = 10000,
    EXPLR_SQUARE_MODE = 10001,
} explorer_view_mode_e;

//定义rat 文件搜索数据结构
typedef struct tag_rat_ctrl
{
	HRAT  handle;				//文件搜索句柄
	__s32 index;				//当前文件索引号
	__s32 total;				//文件总数	
	//rat_media_type_t media_type;//搜索文件的类型
}rat_ctrl_t;

typedef struct explorer_list_item_ui_param_s			
{
    RECT explr_toptitle_tips_rect;
    RECT explr_toptitle_tips2_rect; //mllee 120830
    RECT explr_toptitle_string_rect;
    RECT explr_toptitle_icon_rect;

    RECT explr_list_music_rect;
    RECT explr_list_movie_rect;
    RECT explr_list_photo_rect;

	RECT explr_list_music_browser_icon_rect;
    RECT explr_list_photo_browser_icon_rect;
    RECT explr_list_movie_browser_icon_rect;
	
    RECT ListBarArea;						//list display area in list mode 
    RECT item_rect;							//list item  UI 2?��y
    
    RECT item_top_line;
    RECT item_bottom_line;
    RECT item_dividing_line;
        
    RECT icon_rect;    
    RECT miniature_rect;
                
    RECT text_rect;
	 RECT icon_rect_top;  
	 RECT text_rect_top;
    RECT focus_icon_rect;    
    RECT media_type_rect; 			//??��?����D����?����   	
	
    RECT title_rect;
    RECT file_size_rect;			//???t�䨮D?
    RECT time_rect;	
    RECT number_rect;
    RECT bg_line_rect;

}explorer_list_item_ui_param_t;
typedef struct LV_DRAW_PARA
{
	__u8               type;
    __s32              index;                  // 绘制条目的编号
    void               *attr;                   // 应用的传入的私有数据
} __lv_draw_para_t;

typedef void *(* __lv_draw_item)(__lv_draw_para_t *para);

typedef struct LV_DEL_PARA
{
	__u8               type;
    __s32              index;                  // 绘制条目的编号
    void               *attr;                   // 应用的传入的私有数据
    void               *src;                   // 应用的传入的私有数据
} __lv_del_para_t;

typedef void *(* __lv_del_item)(__lv_del_para_t *para);





typedef struct tag_explr_list_para
{
	__s32				root_type;			//USB or SDCard
	char				*last_filename; 	//上次浏览文件 名
		
	char				search_path[RAT_MAX_FULL_PATH_LEN]; 			//搜索路径
	
	rat_ctrl_t			rat;					//文件搜索数据结构	
	rat_media_type_t	media_type; 			//搜索文件的类型
#ifdef USE_NEW_SMENU
	__u32				menu_type;
#endif
	__u8		        view_mode;
	//H_LBAR				listbar_handle;

	char				music_play_file[RAT_MAX_FULL_PATH_LEN]; 			//文件管理播放文件
	rat_media_type_t	play_media_type;	
	__bool				have_music_file;
	__bool				have_video_file;
	__bool				have_photo_file;
	__bool				touch_key_down;
	__u32				page_start_id;
	__u32				page_end_id;
	__u32				start_id;
	__u32				end_id;
	__u32				focus_id;			//上次选中文件id
	__u32               item_cnt;           // item 的条目总数
    RECT                list_rect;          // listbar所在图层的区域
    __s32               item_width;         // listbar条目的宽
    __s32               item_height;        // listbar条目的高
    __s32               lbar_page_num;      // 单页面内总条目数
	__s32               max_item_num;       // item 的最大条目数
	__s32               max_page_num;       // 缓存最大页数
	__s32               max_fornt_num;      // 前面最大条目数
	
	//explorer_list_item_ui_param_t list_item_ui_param;
    void *              menu_obj;             // menu缓存图层
    void *              item_obj;             // item缓存图层
    void *              top_browse_obj;       // top_browse缓存图层
    void *              mid_browse_obj;       // mid_browse缓存图层
    void *              bottom_browse_obj;    // bottom_browse缓存图层
	void *              list_attr;
	__lv_draw_item		lbar_draw;            // 绘制函数
	__lv_del_item		lbar_del;             // 删除函数
}explr_list_para_t;




typedef struct menu_para
{  
	lv_obj_t * ui_menu;
	lv_obj_t * ui_menu_back;
	lv_obj_t * ui_menu_content;
	lv_obj_t * ui_menu_content_bg;
	//lv_obj_t * ui_menu_top_browse;
	//lv_obj_t * ui_menu_mid_browse;
	//lv_obj_t * ui_menu_bottom_browse;
	lv_obj_t * ui_menu_list;
	lv_obj_t * ui_list_item;
	lv_obj_t * ui_list_item_line;
	lv_obj_t * ui_list_item_arrow;
	lv_obj_t * ui_list_itemleft_arrow;
	lv_obj_t * ui_list_item_arrow_text;
	lv_obj_t * ui_list_item_right_arrow;
	lv_obj_t * ui_list_item_un_enter;
	lv_obj_t * ui_list_item_text;
	lv_obj_t * ui_list_scroll_bar;
	lv_obj_t * ui_list_scroll_bar_up;
	lv_obj_t * ui_list_scroll_bar_bg;
	lv_obj_t * ui_list_scroll_bar_slider;
	lv_obj_t * ui_list_scroll_bar_down;

	__u32 mode;
	
	bool list_scroll_flag;
	bool list_scroll_bar_flag;
	bool list_scroll_up_down_flag;
	
	explr_list_para_t* ui_list_para;
	lv_obj_t * menu_main_obj;
	ui_menu_res_para_t ui_menu_res_para;
	__lv_draw_para_t draw_param;
	__lv_del_para_t del_param;
	__gui_msg_t menu_msg;
}ui_menu_para_t;

extern lv_img_dsc_t * ui_menu_get_res(ui_menu_para_t * menu_para, __u32 icon);
extern void ui_menu_init_res(ui_menu_para_t * menu_para);
extern void ui_menu_uninit_res(ui_menu_para_t * menu_para);

#ifdef __cplusplus
} /*extern "C"*/
#endif

#endif
